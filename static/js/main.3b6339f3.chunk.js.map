{"version":3,"sources":["HomePage/HomePage.jsx","components/CounterWithHooks/CounterWithHooks.jsx","components/ClassComponent/ClassComponent.jsx","components/Feedback/Feedback.jsx","components/Contacts/ContactFind.jsx","components/Contacts/ContactsList.jsx","components/Contacts/ContactsForm.jsx","components/Contacts/ContactDetail.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Contacts/contacts.module.css","components/Feedback/feedback.module.css","HomePage/homePage.module.css","components/componentStyle.module.css"],"names":["HomePage","React","createElement","className","styles","container","title","section","NavLink","to","_ref","isActive","concat","nav","activeNav","_ref2","_ref3","_ref4","Counter","step","value","setValue","useState","Fragment","btn","type","onClick","evt","console","log","prevValue","Component","constructor","arguments","state","handleIncrement","this","setState","prevState","props","handleDecrement","render","defaultProps","Feedback","good","setGood","neutral","setNeutral","bad","setBad","total","positiveFeedback","toFixed","buttonContainer","handeleClickGood","handeleClickNeutral","handeleClickBad","titleH2","list","item","ContactFind","name","onFindContact","htmlFor","onChange","ContactsList","contactsList","onDeleteContact","onSelectContact","length","map","contact","key","id","number","buttonGroup","btnDel","ContactsForm","text","onSubmit","onNameChange","onNumberChange","ContactDetail","onClose","modalOverlay","modalContainer","FaRegWindowClose","closeIcon","Contacts","setName","setNumber","setContacts","selectedContact","setSelectedContact","search","setSearch","filteredContacts","filter","toLowerCase","includes","e","target","preventDefault","newContacts","nanoid","Notify","success","failure","c","searchContact","closeContact","App","Suspense","Routes","Route","path","element","CounterWithHooks","ClassComponent","ReactDOM","createRoot","document","getElementById","StrictMode","BrowserRouter","module","exports"],"mappings":"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","file":"static/js/main.3b6339f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./homePage.module.css\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Event Listener</h1>\r\n      <div className={styles.section}>\r\n        <NavLink\r\n          to=\"/functionComponent\"\r\n          className={({ isActive }) =>\r\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\r\n          }\r\n        >\r\n          Using the Functional Component (hooks)\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/classComponent\"\r\n          className={({ isActive }) =>\r\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\r\n          }\r\n        >\r\n          Using the Class Component\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/Feedback\"\r\n          className={({ isActive }) =>\r\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\r\n          }\r\n        >\r\n          Feedback\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/Contacts\"\r\n          className={({ isActive }) =>\r\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\r\n          }\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","//----------Функціональні компоненти:\r\n// Современный подход: Функциональные компоненты с хуками (useState, useEffect, useReducer и т.д.) являются современным стандартом в React и предоставляют мощные возможности для управления состоянием и побочными эффектами без необходимости использования классов.\r\n//Рекомендуется использовать функциональные компоненты с хуками для новых разработок из-за их простоты, гибкости и современности. Однако, классовые компоненты могут все еще быть полезны для поддержки существующего кода или в ситуациях, где использование хуков затруднительно. Важно понимать и уметь работать с обоими типами компонентов, чтобы эффективно работать с любым кодом на React.\r\n\r\nimport React, { useState } from 'react';\r\nimport HomePage from '../../HomePage/HomePage';\r\nimport styles from '../componentStyle.module.css';\r\n\r\nconst Counter = ({ step = 1 }) => {\r\n  // Используем хук useState для состояния value\r\n  const [value, setValue] = useState(0);\r\n\r\n  // Функция для инкрементации\r\n  const handleIncrement = (evt) => {\r\n    console.log(\"Increment button was clicked!\", evt);\r\n    setValue(prevValue => prevValue + step);\r\n  };\r\n\r\n  // Функция для декрементации\r\n  const handleDecrement = (evt) => {\r\n    console.log(\"Decrement button was clicked!\", evt);\r\n    setValue(prevValue => prevValue - step);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage />\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>Counter</h2>\r\n        <span className={styles.value}>{value}</span>\r\n        <button className={styles.btn} type=\"button\" onClick={handleIncrement}>\r\n          Increment by {step}\r\n        </button>\r\n        <button className={styles.btn} type=\"button\" onClick={handleDecrement}>\r\n          Decrement by {step}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Counter;","import React, { Component } from \"react\";\r\nimport HomePage from \"../../HomePage/HomePage\";\r\n\r\nimport styles from \"../componentStyle.module.css\";\r\n\r\nclass Counter extends Component {\r\n  // Значения по умолчанию для пропсов\r\n  static defaultProps = {\r\n    step: 1,\r\n  };\r\n\r\n  // Начальное состояние\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  // Обработчик увеличения\r\n  handleIncrement = (evt) => {\r\n    console.log(\"Increment button was clicked!\", evt);\r\n    this.setState((prevState, props) => ({\r\n      value: prevState.value + props.step,\r\n    }));\r\n  };\r\n\r\n  // Обработчик уменьшения\r\n  handleDecrement = (evt) => {\r\n    console.log(\"Decrement button was clicked!\", evt);\r\n    this.setState((prevState, props) => ({\r\n      value: prevState.value - props.step,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <HomePage />\r\n        <div className={styles.container}>\r\n          <h2 className={styles.title}>Counter</h2>\r\n          <span className={styles.value}>{value}</span>\r\n          <button className={styles.btn} type=\"button\" onClick={this.handleIncrement}>\r\n            Increment by {step}\r\n          </button>\r\n          <button className={styles.btn} type=\"button\" onClick={this.handleDecrement}>\r\n            Decrement by {step}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport HomePage from \"../../HomePage/HomePage\";\r\nimport { useState } from \"react\";\r\n\r\nimport styles from \"./feedback.module.css\";\r\n\r\nconst Feedback = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handeleClickGood = () => {\r\n    setGood(good + 1);\r\n  };\r\n\r\n  const handeleClickNeutral = () => {\r\n    setNeutral(neutral + 1);\r\n  };\r\n\r\n  const handeleClickBad = () => {\r\n    setBad(bad + 1);\r\n  };\r\n\r\n  const total = good + neutral + bad;\r\n  const positiveFeedback = total\r\n    ? (((good + neutral) / total) * 100).toFixed(2)\r\n    : 0; //округляет до сотой части, то есть два знака после запятой\r\n  // значение по умолчанию для positiveFeedback как 0, если total равно 0. Это предотвращает отображение неопределенного значения % при отсутствии отзывов.\r\n\r\n  return (\r\n    <>\r\n      <HomePage />\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>Please, leave your feedback</h1>\r\n        <div className={styles.buttonContainer}>\r\n          <button className={styles.btn} onClick={handeleClickGood}>\r\n            Good\r\n          </button>\r\n          <button className={styles.btn} onClick={handeleClickNeutral}>\r\n            Neutral\r\n          </button>\r\n          <button className={styles.btn} onClick={handeleClickBad}>\r\n            Bad\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {total > 0 ? (\r\n        <div className={styles.container}>\r\n          <h2 className={styles.titleH2}>Statistics:</h2>\r\n          <ul className={styles.list}>\r\n            <li className={styles.item}>Good: {good}</li>\r\n            <li className={styles.item}>Neutral: {neutral}</li>\r\n            <li className={styles.item}>Bad: {bad}</li>\r\n            <li className={styles.item}>Total: {total}</li>\r\n            <li className={styles.item}>\r\n              Positive feedback: {positiveFeedback}%\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.container}>\r\n          <h2 className={styles.titleH2}>\r\n            Unfortunately, there are no reviews yet!\r\n          </h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\n\r\nconst ContactFind = ({name, onFindContact}) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"find\">Find contact by name</label>\r\n      <input\r\n        onChange={onFindContact}\r\n        type=\"text\"\r\n        name=\"find\"\r\n        value={name}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFind;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contacts.module.css\";\r\nimport ContactFind from \"./ContactFind\";\r\n\r\nconst ContactsList = ({\r\n  contactsList,\r\n  onDeleteContact,\r\n  onSelectContact,\r\n  name,\r\n  onFindContact,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.titleH2}>Contacts List:</h2>\r\n      <ContactFind name={name} onFindContact={onFindContact} />\r\n      {contactsList.length > 0 ? (\r\n      <ul className={styles.list}>\r\n        {contactsList.map((contact) => (\r\n          <li key={contact.id} className={styles.item}>\r\n            <span>\r\n              {contact.name}: {contact.number}\r\n            </span>\r\n            <div className={styles.buttonGroup}>\r\n              <button\r\n                className={styles.btnDel}\r\n                onClick={() => onDeleteContact(contact)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                className={styles.btn}\r\n                onClick={() => onSelectContact(contact)}\r\n              >\r\n                Detail\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n       ) : (<h2 className={styles.title}>No contacts found</h2>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contacts.module.css';\r\n\r\nconst ContactsForm = ({ text, name, number, onSubmit, onNameChange, onNumberChange }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>{text}</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          onChange={onNameChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n        //   required\r\n        />\r\n        <label htmlFor=\"number\">Number:</label>\r\n        <input\r\n          onChange={onNumberChange}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n        //   required\r\n        />\r\n        <button className={styles.btn}>Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsForm.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onNameChange: PropTypes.func.isRequired,\r\n  onNumberChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsForm;\r\n","import React from \"react\";\r\nimport { FaRegWindowClose } from \"react-icons/fa\";\r\n\r\nimport styles from './contacts.module.css';\r\n\r\nconst ContactDetail = ({contact, onClose}) => {\r\n\r\nreturn (\r\n<div className={styles.modalOverlay}>\r\n      <div className={styles.modalContainer}>\r\n        <FaRegWindowClose className={styles.closeIcon} onClick={onClose} />\r\n        <h2 className={styles.title}>Contact Detail</h2>\r\n        <span className={styles.text}>{contact.name}: {contact.number}</span>\r\n      </div>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default ContactDetail;","import React, { useState } from \"react\";\r\nimport HomePage from \"../../HomePage/HomePage\";\r\nimport { Notify } from \"notiflix\";\r\nimport { nanoid } from \"nanoid\";\r\nimport ContactsList from \"./ContactsList\";\r\nimport ContactsForm from \"./ContactsForm\";\r\nimport ContactDetail from \"./ContactDetail\";\r\n\r\nconst Contacts = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [contactsList, setContacts] = useState([]); //создаём пустой масив для списка контактов\r\n  const [selectedContact, setSelectedContact] = useState(null); // состояние для выбранного контакта\r\n  const [search, setSearch] = useState(''); // состояние для поиска контакта\r\n\r\n  // handleNameChange и handleNumberChange обновляют состояния name и number соответственно.\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = nanoid(); // добавляет id к новосоздоному контакту\r\n    const newContacts = { id, name, number };\r\n    if (name !== \"\" || number !== \"\") {\r\n      setContacts([...contactsList, newContacts]); //добавляем новый контакт в масив контактов\r\n      Notify.success(`${name} successful added to your phonebook!`);\r\n      console.log(newContacts);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      Notify.failure(\"To add a contact you need to fill in all fields\");\r\n    }\r\n  };\r\n\r\n  const deleteContact = (contact) => {\r\n    setContacts(contactsList.filter((c) => c.id !== contact.id));\r\n    Notify.success(`${contact.name} successful deleted from your phonebook!`);\r\n  };\r\n  //   1. contactsList.filter(...): Эта часть кода создает новый массив, содержащий только те контакты, у которых id не совпадает с id удаляемого контакта.\r\n  //   2. (c) => c.id !== contact.id: Это стрелочная функция, которая проверяет каждый контакт c в contactsList. Если id текущего контакта c не совпадает с id контакта, который нужно удалить, то этот контакт включается в новый массив.\r\n  //   3. setContacts(...): Функция setContacts обновляет состояние contactsList, заменяя его на новый отфильтрованный массив. Это приводит к повторному рендерингу компонента, отображающего список контактов, с обновленным списком, из которого исключен удаленный контакт.\r\n\r\n  const findContact = (e) => {\r\n    const searchContact = e.target.value;\r\n    setSearch(searchContact);\r\n    console.log(searchContact);\r\n  };\r\n\r\n  const filteredContacts = contactsList.filter((contact) =>\r\n    contact.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const selectContact = (contact) => {\r\n    setSelectedContact(contact);\r\n  };\r\n\r\n  const closeContact = () => {\r\n    setSelectedContact(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage />\r\n      <ContactsForm\r\n        text=\"Phone Book\"\r\n        name={name}\r\n        number={number}\r\n        onNameChange={handleChangeName}\r\n        onNumberChange={handleChangeNumber}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      {contactsList.length > 0 && (\r\n        <ContactsList\r\n          name={search}\r\n          contactsList={filteredContacts}\r\n          onDeleteContact={deleteContact}\r\n          onSelectContact={selectContact}\r\n          onFindContact={findContact}\r\n        />\r\n      )}\r\n      {selectedContact && (\r\n        <ContactDetail contact={selectedContact} onClose={closeContact} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Suspense } from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport CounterWithHooks from \"./components/CounterWithHooks/CounterWithHooks\";\r\nimport ClassComponent from \"./components/ClassComponent/ClassComponent\";\r\nimport Feedback from './components/Feedback/Feedback';\r\nimport Contacts from './components/Contacts/Contacts';\r\nfunction App() {\r\n  return (\r\n    <Suspense>\r\n    <Routes>\r\n      <Route path=\"/\" element={<HomePage />} />\r\n      <Route path=\"/functionComponent\" element={<CounterWithHooks />} />\r\n      <Route path=\"/classComponent\" element={<ClassComponent />} />\r\n      <Route path=\"/feedback\" element={<Feedback />} />\r\n      <Route path=\"/contacts\" element={<Contacts />} />\r\n    </Routes>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter >\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"contacts_container__i67Ju\",\"title\":\"contacts_title__3VM6s\",\"list\":\"contacts_list__2VvAh\",\"item\":\"contacts_item__3TCp9\",\"buttonGroup\":\"contacts_buttonGroup__2ZXMG\",\"red-border\":\"contacts_red-border__1f4YD\",\"btn\":\"contacts_btn__18wax\",\"btnDel\":\"contacts_btnDel__1Oh3U\",\"modalOverlay\":\"contacts_modalOverlay__33Tus\",\"modalContainer\":\"contacts_modalContainer__2kzCG\",\"closeIcon\":\"contacts_closeIcon__434Sn\",\"text\":\"contacts_text__2LloP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feedback_container__3SnbD\",\"title\":\"feedback_title__3HSP-\",\"titleH2\":\"feedback_titleH2__PW7gv\",\"buttonContainer\":\"feedback_buttonContainer__3KYGx\",\"btn\":\"feedback_btn__FfrLz\",\"list\":\"feedback_list__IrlaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"homePage_container__jWYRb\",\"title\":\"homePage_title__3T8iT\",\"section\":\"homePage_section__r3J7o\",\"nav\":\"homePage_nav__Ol_Nl\",\"activeNav\":\"homePage_activeNav__2SKzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"componentStyle_container__7OG1m\",\"title\":\"componentStyle_title__1nsbD\",\"value\":\"componentStyle_value__gh7DB\",\"btn\":\"componentStyle_btn__2VAIF\"};"],"sourceRoot":""}